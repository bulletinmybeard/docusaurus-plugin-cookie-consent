name: CI

on:
    push:
        branches: [main, master]
    pull_request:
        branches: [main, master]
        paths:
            - 'src/**'
            - 'templates/**'
            - 'package*.json'
            - 'tsconfig.json'
            - '.github/workflows/ci.yml'
    workflow_dispatch:

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    ci:
        name: CI (Node ${{ matrix.node }} on ${{ matrix.os }})
        runs-on: ${{ matrix.os }}
        if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}

        strategy:
            matrix:
                os: [ubuntu-latest]
                node: [18, 20]
                include:
                    - os: ubuntu-latest
                      node: 18
                      test-docusaurus: true
                    - os: ubuntu-latest
                      node: 20
                      test-docusaurus: false  # Only test once to save CI time

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js ${{ matrix.node }}
              uses: actions/setup-node@v4
              with:
                  node-version: ${{ matrix.node }}
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Run linting
              run: npm run lint

            - name: Check formatting
              run: npm run format:check

            - name: Build plugin
              run: npm run build

            - name: Type checking
              run: npm run typecheck

            - name: Run tests
              run: npm test

            - name: Create package tarball
              run: npm pack

            - name: Test plugin installation in Docusaurus
              if: matrix.test-docusaurus
              run: |
                  # Create a test Docusaurus project
                  npx create-docusaurus@latest test-site classic --typescript --skip-install
                  cd test-site
                  
                  # Install dependencies
                  npm install
                  
                  # Install the plugin from the tarball
                  npm install ../docusaurus-plugin-cookie-consent-*.tgz --legacy-peer-deps
                  
                  # Verify the plugin is installed
                  npm ls docusaurus-plugin-cookie-consent
                  
                  # Check if plugin files exist
                  ls -la node_modules/docusaurus-plugin-cookie-consent/dist/plugin/
                  
                  # Add the plugin to the Docusaurus config
                  cat >> docusaurus.config.ts << 'EOF'
                  
                  // Add the cookie consent plugin to the plugins array
                  const originalConfig = config;
                  config.plugins = [
                      ...config.plugins || [],
                      ['docusaurus-plugin-cookie-consent', {
                          providers: [
                              {
                                  type: 'google',
                                  id: 'G-XXXXXXXXXX'
                              }
                          ]
                      }]
                  ];
                  EOF
                  
                  # Build the Docusaurus site with the plugin
                  npm run build
                  
                  echo "âœ… Plugin successfully built in Docusaurus project"

            - name: Upload package artifact
              if: matrix.test-docusaurus
              uses: actions/upload-artifact@v4
              with:
                  name: npm-package-node${{ matrix.node }}-${{ github.sha }}
                  path: 'docusaurus-plugin-cookie-consent-*.tgz'
                  retention-days: 1
